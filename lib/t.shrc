# sh

__t_idx=1
__t_total=0
__t_ok=0
__t_ng=0
__t_shell=""
__t_level=0
__t_verbose=""
__t_tmpfile="./.__t_tmp.dat"

_t_incr() {
  local _var=$1
  local _add=${2:-1}
  local _cur_var=$(($_var))
  eval "${_var}=$(expr $(($_var)) + $_add)"
}

_t_either() {
  local _t_result=$1
  _t_incr __t_idx
  _t_incr __t_total
  _t_incr $_t_result
}

_t_incr_level() {
  __t_level=$(expr ${__t_level} + 1)
}

_t_decr_level() {
  __t_level=$(expr ${__t_level} - 1)
}

_t_put() {
  if [ $__t_level -gt 0 -a -z "$__t_verbose" ]; then
    return
  fi
  local i=0
  while [ $i -lt $__t_level ]; do
    printf "  "
    i=$(expr $i + 1)
  done
  printf "$1\n"
}

t_init() {
  __t_idx=1
  __t_total=0
  __t_ok=0
  __t_ng=0
  local _cmd=$(ps -p $$ | tail -1 | awk '{print $4}')
  case "$_cmd" in
    *bash )
      __t_shell="bash"
      ;;
    *zsh )
      __t_shell="zsh"
      ;;
    *sh )
      __t_shell="sh"
      ;;
    *dash )
      __t_shell="dash"
      ;;
    * )
      __t_shell="not-supported"
      ;;
  esac
}

t_diag() {
  _t_put "# $1"
}

t_pass() {
  if [ "$__t_verbose" ]; then
    _t_put "ok $__t_idx - ${1:-pass}"
  fi
  _t_either __t_ok
  return 0
}

t_fail() {
  _t_put "\033[0;31mnot ok $__t_idx - ${1:-fail}\033[0;39m"
  _t_either __t_ng
  return 1
}

t_ok() {
  local _sbj="$1"
  local _diag="${2:-}"
  if [ -z "$_diag" ]; then
    _diag="ok $1"
  fi
  if [ $_sbj ]; then
    t_pass "$_diag"
  else
    t_fail "$_diag"
  fi
}

t_ng() {
  local _sbj="$1"
  local _diag="${2:-}"
  if [ -z "$_diag" ]; then
    _diag="ng $1"
  fi
  if [ $_sbj ]; then
    t_fail "$_diag"
  else
    t_pass "$_diag"
  fi
}

t_is() {
  local _t_a=$1
  local _t_b=$2
  local _diag="${3:-}"
  if [ -z "$_diag" ]; then
    _diag="$1 is $2"
  fi
  if [ "$_t_a" = "$_t_b" ]; then
    t_pass "$_diag"
  else
    t_fail "$_diag"
  fi
}

t_isnt() {
  local _t_a=$1
  local _t_b=$2
  local _diag="${3:-}"
  if [ -z "$_diag" ]; then
    _diag="$1 isn't $2"
  fi
  if [ "$_t_a" != "$_t_b" ]; then
    t_pass "$_diag"
  else
    t_fail "$_diag"
  fi
}

_t_try() {
  local _cmd="$1"
  local _type=$2
  local _diag="$3"
  local _fail=""
  $_cmd > $__t_tmpfile 2>&1
  local _ret=$?
  if [ "$_type" = "success" ]; then
    if [ $_ret -ne 0 ]; then
      _fail=1
    fi
  elif [ $_ret -eq 0 ]; then
    _fail=1
  fi
  if [ "$_fail" ]; then
    t_fail "$_diag"
    cat $__t_tmpfile | while read _t_line; do
      _t_put "\033[0;31m# ${_t_line}\033[0;39m"
    done
  else
    t_pass "$_diag"
  fi
  rm -f $__t_tmpfile
}

t_success() {
  local _cmd="$1"
  local _diag="${2:-}"
  if [ -z "$_diag" ]; then
    _diag="$1 success"
  fi
  _t_try "$_cmd" "success" "$_diag"
}

t_error() {
  local _cmd="$1"
  local _diag="${2:-}"
  if [ -z "$_diag" ]; then
    _diag="$1 error"
  fi
  _t_try "$_cmd" "error" "$_diag"
}

t_substart() {
  t_init
  _t_incr_level
  t_diag "${1:-substart}"
}

t_subend() {
  t_is $? 0 "${1:-subend}"
}

t_subclose() {
  _t_put "1..$__t_total"
  t_report
}

t_report() {
  if [ "${1:-}" ]; then
    printf "$__t_total\t$__t_ok\t$__t_ng\n" > $1
  fi
  return $__t_ng
}
