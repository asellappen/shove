#!/usr/bin/env bash

set -eu

version="0.0.4"

bin_dir=$(cd $(dirname $0) && pwd)

help() {
  pod2text $0
  exit 1
}

if [ ${SHOVE_DEBUG:-} ]; then
  set -x
fi

targets=()

# ============================================================
# Parse Arguments

for opt in "$@"; do
  case "${1:-}" in
    "-s" | "--shell" )
      if [[ -z $2 || "$2" =~ ^-+ ]]; then
        help
      else
        SHOVE_SHELL=$2
        shift 2
      fi
      ;;
    "-v" | "--verbose" )
      SHOVE_VERBOSE=1
      shift
      ;;
    "-h" | "--help" )
      help
      ;;
    "-V" | "--version" )
      echo $version
      exit 0
      ;;
    * )
      if [[ ${1:-} ]]; then
        targets+=($1)
        shift
      fi
      ;;
  esac
done

SHOVE_SHELL=${SHOVE_SHELL:-$SHELL}
SHOVE_TMPFILE=./.shove.tmp.sh

if [ ${SHOVE_DEBUG:-} ]; then
  SHOVE_SHELL="$SHOVE_SHELL -x"
fi

# ============================================================
# Functions

_add() {
  echo "$1" >> $tmp
}

test_file() {
  _t=$1
  tmp=$SHOVE_TMPFILE.$i

  # create tmp test script
  : > $tmp
  _add ". ${bin_dir}/../lib/t.shrc"
  _add "t_init"
  if [[ ${SHOVE_VERBOSE:-} ]]; then
    _add "__t_verbose=1"
  fi
  cat $_t >> $tmp
  _add "t_report"

  # exec tmp test script
  echo "# $_t by $SHOVE_SHELL"
  set +e
  $SHOVE_SHELL $tmp
  result=$?
  set -e

  if [[ $result = 0 ]]; then
    printf "\033[0;32mTests for $_t - PASS.\033[0;39m\n"
  else
    printf "\033[0;31mTests for $_t - FAIL.\033[0;39m\n"
  fi

  rm -f $tmp
}

# ============================================================
# Main Entry

i=0
for tgt in ${targets[@]}; do
  i=$((i + 1))
  test_file $tgt
done

exit $result

: <<'__EOF__'

=encoding utf8

=head1 NAME

B<shove> - A test tool for shell scripts

=head1 SYNOPSYS

    shove [-s /bin/sh] t/foo.t

Help:

    shove -h|--help

Show version:

    shove -v|--version

=head1 DESCRIPTION

This script runs target test scripts.

=head1 AUTHORS

YASUTAKE Kiyoshi E<lt>yasutake.kiyoshi@gmail.comE<gt>

=head1 LICENSE

The MIT License (MIT)

Copyright (c) 2016 YASUTAKE Kiyoshi

=cut

__EOF__

